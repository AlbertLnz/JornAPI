{
    "openapi": "3.0.0",
    "info": {
        "title": "Jornalia API",
        "description": "This is the API documentation for the Jornalia application.",
        "termsOfService": "https://example.com/terms",
        "contact": {
            "name": "API Support",
            "url": "https://example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Local development server"
        },
        {
            "url": "https://jornalia.fly.dev/api",
            "description": "Production server"
        }
    ],
    "paths": {
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the user",
                "description": "Logs out the user by invalidating the JWT token",
                "operationId": "69d4e9cbc4049694954db550c246dc48",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer your-jwt-token"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Authorization"
                                ],
                                "properties": {
                                    "Authorization": {
                                        "type": "string",
                                        "example": "Bearer your-jwt-token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user and obtain JWT token",
                "description": "This endpoint allows users to authenticate by providing their credentials and receive a JWT token to access protected routes.",
                "operationId": "f7042588b5a199d158e21146c5c9d01e",
                "requestBody": {
                    "description": "User credentials required for authentication",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not active or invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Retrieve User Dashboard",
                "description": "Fetches the dashboard details for the authenticated user.",
                "operationId": "f863f42a01b1a34842976156502a9992",
                "responses": {
                    "200": {
                        "description": "Dashboard retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard retrieved successfully"
                                        },
                                        "dashboardData": {
                                            "properties": {
                                                "totalHoursWorked": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.5
                                                },
                                                "currentMonthSalary": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "dailyWorkHours": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2023-11-02"
                                                            },
                                                            "startTime": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "09:00:00"
                                                            },
                                                            "endTime": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "17:00:00"
                                                            },
                                                            "plannedHours": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 8
                                                            },
                                                            "actualHours": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 7.5
                                                            },
                                                            "workType": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "NORMAL",
                                                                    "OVERTIME",
                                                                    "HOLIDAY"
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Register a new employee",
                "description": "Registers a new employee with the provided details.",
                "operationId": "1861b3794d588d914c0bd87f7a8c69b0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "normal_hourly_rate",
                                    "overtime_hourly_rate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "Company Inc."
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "securepassword123"
                                    },
                                    "normal_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 20
                                    },
                                    "overtime_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30
                                    },
                                    "night_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "holiday_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 35
                                    },
                                    "irpf": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Retrieve employee details",
                "description": "Fetches the details of the employee associated with the authenticated user. The provided JWT token must belong to a user with the role of 'employee'.",
                "operationId": "9c53824ef69bf83004916677bbd128e5",
                "responses": {
                    "200": {
                        "description": "Employee found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee found successfully"
                                        },
                                        "employee": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "normal_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 20
                                                },
                                                "overtime_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 30
                                                },
                                                "night_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 25
                                                },
                                                "holiday_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 35
                                                },
                                                "irpf": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee details",
                "description": "Updates the details of the employee associated with the authenticated user. The provided JWT token must belong to a user with the role of 'employee'.",
                "operationId": "1ea162854cbdbb98ce7319e2f664af85",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "company",
                                    "normal_hourly_rate",
                                    "overtime_hourly_rate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "company": {
                                        "type": "string",
                                        "example": "Tech Corp"
                                    },
                                    "normal_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 20
                                    },
                                    "overtime_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30
                                    },
                                    "night_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "holiday_hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 35
                                    },
                                    "irpf": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee updated successfully"
                                        },
                                        "employee": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "example": "Tech Corp"
                                                },
                                                "normal_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 20
                                                },
                                                "overtime_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 30
                                                },
                                                "night_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 25
                                                },
                                                "holiday_hourly_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 35
                                                },
                                                "irpf": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unprocessable Content"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/hour_session": {
            "get": {
                "tags": [
                    "HourSession"
                ],
                "summary": "Retrieve hour session details",
                "description": "Fetches the details of the hour session associated with the provided JWT token. The token must be valid and authorized.",
                "operationId": "ecd7f5e91e0fff4fb3a342f2e815ff21",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The date of the hour session to retrieve (format: YYYY-MM-DD).",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2020-01-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hour session found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour session found successfully"
                                        },
                                        "hour_session": {
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2020-01-01"
                                                },
                                                "normal_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8
                                                },
                                                "overtime_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4
                                                },
                                                "night_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "holiday_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hour session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour session not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "HourSession"
                ],
                "summary": "Update a hour session",
                "description": "Updates the details of the hour session associated with the provided JWT token. The token must be valid and authorized.",
                "operationId": "a81f146d0bdbcc512ed4a109a3460044",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The date of the hour session to be updated. This field cannot be edited.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-01-01"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "08:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00"
                                    },
                                    "planned_hours": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "is_holiday": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_overtime": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hour session updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour session updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hour session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour session not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "HourSession"
                ],
                "summary": "Register a new hour session",
                "description": "Registers a new hour session with the provided details.",
                "operationId": "9e7beed276346007e28f5bde32aeac84",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "employee_id",
                                    "date",
                                    "start_time",
                                    "end_time",
                                    "planned_hours",
                                    "is_holiday",
                                    "is_overtime"
                                ],
                                "properties": {
                                    "employee_id": {
                                        "type": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2022-01-01"
                                    },
                                    "start_time": {
                                        "type": "time",
                                        "example": "08:00"
                                    },
                                    "end_time": {
                                        "type": "time",
                                        "example": "17:00"
                                    },
                                    "planned_hours": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "is_holiday": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_overtime": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Hour session created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour session created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "HourSession"
                ],
                "summary": "Delete a hour worked",
                "description": "Deletes the hour worked associated with the provided JWT token. The token must be valid and authorized to perform this action.",
                "operationId": "479c9f7cc893abcffe65e9dbb05dc8b8",
                "responses": {
                    "200": {
                        "description": "Hour worked deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour worked deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hour worked not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hour worked not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/salary": {
            "get": {
                "tags": [
                    "Salary"
                ],
                "summary": "Retrieve Salary by Month",
                "description": "Fetches the details of the salary associated with the provided JWT token. The token must be valid and authorized.",
                "operationId": "114953af44d637ed7763d90319409b04",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "description": "The month for which the salary is retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year for which the salary is retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2020
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salary found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Salary found successfully"
                                        },
                                        "salary": {
                                            "properties": {
                                                "total_normal_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8
                                                },
                                                "total_overtime_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4
                                                },
                                                "total_holiday_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "total_gross_salary": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120
                                                },
                                                "total_net_salary": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 108
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Salary not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Salary not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/delete": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Deletes the user associated with the provided JWT token. The token must be valid and authorized to perform this action.",
                "operationId": "33209e070ebc14fa9a0970b96f8e0004",
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/show": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Retrieve user details",
                "description": "Fetches the details of the user associated with the provided JWT token. The token must be valid and authorized.",
                "operationId": "97a91421f588a650132022a822f23645",
                "responses": {
                    "200": {
                        "description": "User found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User found successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "employee"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/update": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user details",
                "description": "Updates the details of the user associated with the provided JWT token. The token must be valid and authorized. Requires email and password to be provided in the request body.",
                "operationId": "b8f29e891daeca8d4736d7ba167fe645",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "employee"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Bearer token authentication",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        },
        {
            "name": "Employee",
            "description": "Employee"
        },
        {
            "name": "HourSession",
            "description": "HourSession"
        },
        {
            "name": "Salary",
            "description": "Salary"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}